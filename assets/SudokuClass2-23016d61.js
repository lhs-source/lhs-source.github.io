var F=Object.defineProperty;var Y=(m,t,i)=>t in m?F(m,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):m[t]=i;var T=(m,t,i)=>(Y(m,typeof t!="symbol"?t+"":t,i),i);import{d as q,r as A,k as U,o as G,l as $,c as p,e as u,F as w,h as z,m as R,w as j,v as O,a as v,n as W,t as P}from"./app-f2535a55.js";const E=[[0,1,2,9,10,11,18,19,20],[3,4,5,12,13,14,21,22,23],[6,7,8,15,16,17,24,25,26],[27,28,29,36,37,38,45,46,47],[30,31,32,39,40,41,48,49,50],[33,34,35,42,43,44,51,52,53],[54,55,56,63,64,65,72,73,74],[57,58,59,66,67,68,75,76,77],[60,61,62,69,70,71,78,79,80]],B=[[0,1,2,3,4,5,6,7,8],[9,10,11,12,13,14,15,16,17],[18,19,20,21,22,23,24,25,26],[27,28,29,30,31,32,33,34,35],[36,37,38,39,40,41,42,43,44],[45,46,47,48,49,50,51,52,53],[54,55,56,57,58,59,60,61,62],[63,64,65,66,67,68,69,70,71],[72,73,74,75,76,77,78,79,80]],M=[[0,9,18,27,36,45,54,63,72],[1,10,19,28,37,46,55,64,73],[2,11,20,29,38,47,56,65,74],[3,12,21,30,39,48,57,66,75],[4,13,22,31,40,49,58,67,76],[5,14,23,32,41,50,59,68,77],[6,15,24,33,42,51,60,69,78],[7,16,25,34,43,52,61,70,79],[8,17,26,35,44,53,62,71,80]];class J{constructor(t){T(this,"board");this.board=this.initializeBoard(t),t&&this.calculateAllEmptyCellCandidate()}initializeBoard(t){return{cells:Array.from({length:81},(o,e)=>({digit:(t==null?void 0:t[e])??0,input:!1,candidateList:[1,2,3,4,5,6,7,8,9],invalidCandidateList:[],index:e,row:Math.floor(e/9),col:e%9,box:Math.floor(Math.floor(e/9)/3)*3+Math.floor(e%9/3)}))}}generate(t){this.initializeBoard(t),this.calculateAllEmptyCellCandidate()}extractToString(){return this.board.cells.map(t=>t.digit).join(",")}fromString(t){const o=t.split(",").map(e=>parseInt(e));this.initializeBoard(o),o&&this.calculateAllEmptyCellCandidate()}generateFirstBoxMatrix(){const t=E[0],i=[1,2,3,4,5,6,7,8,9].sort(()=>Math.random()-.5);t.forEach(o=>{const e=this.board.cells[o],n=i.pop();this.setNumberCell(e,n)})}generateMatrixMultiple(t){const i=[[0,0,1],[1,0,0],[0,1,0]],o=[[0,1,0],[0,0,1],[1,0,0]];if(t===0){this.generateFirstBoxMatrix();return}else if(t===1){const e=d.numberArrayToMatrix(d.extractCellDigit(this.getBoxMatrix(0)),3,3),n=d.matrixMultiply(o,e,3,3);this.getBoxMatrix(1).forEach((s,a)=>{const r=n[Math.floor(a/3)][a%3];this.setNumberCell(s,r)})}else if(t===2){const e=d.numberArrayToMatrix(d.extractCellDigit(this.getBoxMatrix(0)),3,3),n=d.matrixMultiply(i,e,3,3);this.getBoxMatrix(2).forEach((s,a)=>{const r=n[Math.floor(a/3)][a%3];this.setNumberCell(s,r)})}else if(t===3){const e=d.numberArrayToMatrix(d.extractCellDigit(this.getBoxMatrix(0)),3,3),n=d.matrixMultiply(e,i,3,3);this.getBoxMatrix(3).forEach((s,a)=>{const r=n[Math.floor(a/3)][a%3];this.setNumberCell(s,r)})}else if(t===4){const e=d.numberArrayToMatrix(d.extractCellDigit(this.getBoxMatrix(0)),3,3);let n=d.matrixMultiply(o,e,3,3);n=d.matrixMultiply(n,i,3,3),this.getBoxMatrix(4).forEach((s,a)=>{const r=n[Math.floor(a/3)][a%3];this.setNumberCell(s,r)})}else if(t===5){const e=d.numberArrayToMatrix(d.extractCellDigit(this.getBoxMatrix(0)),3,3);let n=d.matrixMultiply(i,e,3,3);n=d.matrixMultiply(n,i,3,3),this.getBoxMatrix(5).forEach((s,a)=>{const r=n[Math.floor(a/3)][a%3];this.setNumberCell(s,r)})}else if(t===6){const e=d.numberArrayToMatrix(d.extractCellDigit(this.getBoxMatrix(0)),3,3),n=d.matrixMultiply(e,o,3,3);this.getBoxMatrix(6).forEach((s,a)=>{const r=n[Math.floor(a/3)][a%3];this.setNumberCell(s,r)})}else if(t===7){const e=d.numberArrayToMatrix(d.extractCellDigit(this.getBoxMatrix(0)),3,3);let n=d.matrixMultiply(o,e,3,3);n=d.matrixMultiply(n,o,3,3),this.getBoxMatrix(7).forEach((s,a)=>{const r=n[Math.floor(a/3)][a%3];this.setNumberCell(s,r)})}else if(t===8){const e=d.numberArrayToMatrix(d.extractCellDigit(this.getBoxMatrix(0)),3,3);let n=d.matrixMultiply(i,e,3,3);n=d.matrixMultiply(n,o,3,3),this.getBoxMatrix(8).forEach((s,a)=>{const r=n[Math.floor(a/3)][a%3];this.setNumberCell(s,r)})}}getBoxMatrix(t){return E[t].map(e=>this.board.cells[e])}mixVerticalRow(){const t=Math.floor(Math.random()*3),i=[0,1,2].sort(()=>Math.random()-.5).slice(0,2),o=B[t*3+i[0]],e=B[t*3+i[1]];for(let n=0;n<o.length;n++){const l=this.board.cells[o[n]].digit;this.board.cells[o[n]].digit=this.board.cells[e[n]].digit,this.board.cells[e[n]].digit=l}}mixHorizontalColumn(){const t=Math.floor(Math.random()*3),i=[0,1,2].sort(()=>Math.random()-.5).slice(0,2),o=M[t*3+i[0]],e=M[t*3+i[1]];for(let n=0;n<o.length;n++){const l=this.board.cells[o[n]].digit;this.board.cells[o[n]].digit=this.board.cells[e[n]].digit,this.board.cells[e[n]].digit=l}}mixVerticalBox(){}mixHorizontalBox(){}mixReplaceDigit(){const t=[1,2,3,4,5,6,7,8,9].sort(()=>Math.random()-.5).slice(0,2),i=t[0],o=t[1],e=this.board.cells.filter(l=>l.digit===i),n=this.board.cells.filter(l=>l.digit===o);e.forEach(l=>{l.digit=o}),n.forEach(l=>{l.digit=i})}onlyOneCandidate(){for(let t=0;t<81;t++){const i=this.board.cells[t];if(i.digit===0&&i.candidateList.length===1)return this.setNumberCell(i,i.candidateList[0]),{index:i.index,digit:i.candidateList[0]}}return null}generateOneCellCandidateRandom(){const t=this.onlyOneCandidate();if(t!==null)return t.index;const i=this.board.cells.filter(l=>l.digit===0),o=Math.floor(Math.random()*i.length),e=i[o],n=Math.floor(Math.random()*e.candidateList.length);return e.candidateList[n],e.index}generateOneRandomSafe(t){if(t==null)return!1;const i=this.board.cells[t];if(!i)return!0;i.digit!==0&&(i.digit=0,this.getNeighborCell(i).forEach(s=>{this.calculateCellCandidate(s)}));const o=i.candidateList.filter(l=>!i.invalidCandidateList.includes(l));if(o.length===0){const l=t-1,s=this.board.cells[l];return s.invalidCandidateList.push(s.digit),s.digit=0,i.invalidCandidateList=[],this.getNeighborCell(s).forEach(r=>{this.calculateCellCandidate(r)}),this.generateOneRandomSafe(l)}const e=Math.floor(Math.random()*o.length),n=o[e];return this.setNumberCell(i,n),this.generateOneRandomSafe(t+1)}removeDigitRandom(t){for(let i=0;i<t;i++){const o=Math.floor(Math.random()*81),e=this.board.cells[o];e.digit=0,this.calculateAllEmptyCellCandidate()}}removeCandidate(t,i,o){const e=Math.floor(t/3)*3+Math.floor(i/3),n=B[t],l=M[i],s=E[e];n.forEach(a=>{this.removeCandidateCell(this.board.cells[a],o)}),l.forEach(a=>{this.removeCandidateCell(this.board.cells[a],o)}),s.forEach(a=>{this.removeCandidateCell(this.board.cells[a],o)})}removeCandidateCell(t,i){t.candidateList=t.candidateList.filter(o=>o!==i)}calculateCellCandidate(t){if(t.digit!==0)return;t.candidateList=[1,2,3,4,5,6,7,8,9];const i=t.row,o=t.col,e=t.box,n=B[i],l=M[o],s=E[e];n.forEach(a=>{this.removeCandidateCell(t,this.board.cells[a].digit)}),l.forEach(a=>{this.removeCandidateCell(t,this.board.cells[a].digit)}),s.forEach(a=>{this.removeCandidateCell(t,this.board.cells[a].digit)})}calculateAllEmptyCellCandidate(){this.board.cells.forEach(t=>{this.calculateCellCandidate(t)})}getNeighborCell(t){const i=B[t.row],o=M[t.col],e=E[t.box],n=i.concat(o,e).map(l=>this.board.cells[l]);return n.filter(l=>l.index!==t.index),n}setNumberIndex(t,i,o=!1){const e=this.board.cells[t];e.digit=i,e.input=o,e.candidateList=[],this.removeCandidate(e.row,e.col,i)}setNumberCell(t,i,o=!1){t.digit=i,t.input=o,t.candidateList=[],this.removeCandidate(t.row,t.col,i)}getPincerCellList(t){if(t.candidateList.length!==2)return[];const i=t.candidateList;B[t.row],M[t.col],E[t.box];const o=new Set(this.getNeighborCell(t).filter(l=>l.candidateList.length===2&&l.index!==t.index).map(l=>l.index)),e=Array.from(o);if(e.length<=1)return[];console.log("neighborList",e);const n={sourceCellList:[],targetCellList:[],removeNumber:0};for(let l=0;l<e.length;++l){const s=this.board.cells[e[l]];for(let a=l+1;a<e.length;++a){const r=this.board.cells[e[a]];if(console.log("sourceCell",s,"targetCell",r),s.row===r.row||s.col===r.col||s.box===r.box)continue;const h=d.intersectionArray(i,s.candidateList),x=d.intersectionArray(i,r.candidateList);if(console.log("yz xz",h,x),h.length===1&&x.length===1&&h[0]!==x[0]){const g=d.excludeArray(s.candidateList,h),C=d.excludeArray(r.candidateList,x);if(console.log("yExclude",g,"zExclude",C),g[0]!==C[0])continue;console.log("pincerCell found",s,r);const L=this.getNeighborCell(s).map(y=>y.index),_=this.getNeighborCell(r).map(y=>y.index),b=Array.from(new Set(d.intersectionArray(L,_))),H=g[0];if(n.sourceCellList.push(s.index),n.sourceCellList.push(r.index),n.targetCellList.push(...b),n.removeNumber=H,console.log("pincerCell",n),b.length<=0)continue;const S=[];if(b.forEach(y=>{const D=this.board.cells[y];D.candidateList.includes(n.removeNumber)&&(console.log("pincerCell to HintList",D,n.removeNumber),S.push({index:y,candidateList:[n.removeNumber],influentCellList:n.sourceCellList}))}),S.length>0)return S}}}return[]}hintNakedSingleCandidate(){for(let t=0;t<81;t++){const i=this.board.cells[t];if(i.digit===0&&i.candidateList.length===1)return{index:i.index,digit:i.candidateList[0]}}return null}hintSingleVerticalCandidate(){for(let t=0;t<9;t++){const i=M[t],o=i.map(n=>this.board.cells[n].candidateList).flat(),e=o.filter(n=>o.filter(l=>l===n).length===1);if(e.length>0){const n=e[0];return{index:i.find(s=>this.board.cells[s].candidateList.includes(n)),digit:n}}}return null}hintSingleHorizontalCandidate(){for(let t=0;t<9;t++){const i=B[t],o=i.map(n=>this.board.cells[n].candidateList).flat(),e=o.filter(n=>o.filter(l=>l===n).length===1);if(e.length>0){const n=e[0];return{index:i.find(s=>this.board.cells[s].candidateList.includes(n)),digit:n}}}return null}hintSingleBoxCandidate(){for(let t=0;t<9;t++){const i=E[t],o=i.map(n=>this.board.cells[n].candidateList).flat(),e=o.filter(n=>o.filter(l=>l===n).length===1);if(e.length>0){const n=e[0];return{index:i.find(s=>this.board.cells[s].candidateList.includes(n)),digit:n}}}return null}lockEliminate2Pair(t){const i=[],o=t.map(l=>this.board.cells[l]).filter(l=>l.digit===0),e=o.map(l=>l.index);o.length;const n=o.map(l=>this.board.cells[l.index]).filter(l=>l.candidateList.length===2);if(n.map(l=>l.index),console.log("twoPairList",n),n.length>1){for(let l=0;l<n.length;++l)for(let s=l+1;s<n.length;++s)if(d.isArraysEqual(n[l].candidateList,n[s].candidateList)){const a=n[l].candidateList,r=[n[l].index,n[s].index],x=d.excludeArray(e,r).map(g=>this.board.cells[g]);console.log("pairCandidateList",a),console.log("otherCellList",x),x.length>0&&x.forEach(g=>{const C={index:g.index,candidateList:[]},L=d.intersectionArray(g.candidateList,a);C.candidateList=L,C.candidateList.length>0&&i.push(C)})}}return i}hintLockEliminate2PairVertical(){const t=[];for(let i=0;i<9;++i){const o=M[i],e=this.lockEliminate2Pair(o);e&&t.push(...e)}return t.length>0?t:null}hintLockEliminate2PairHorizontal(){const t=[];for(let i=0;i<9;++i){const o=B[i],e=this.lockEliminate2Pair(o);e&&t.push(...e)}return t.length>0?t:null}hintLockEliminate2PairBox(){const t=[];for(let i=0;i<9;++i){const o=E[i],e=this.lockEliminate2Pair(o);e&&t.push(...e)}return t.length>0?t:null}hintLockEliminate3PairHorizontal(){}hintLockEliminate3PairVertical(){}hintLockEliminate3PairBox(){}hintHidden2PairHorizontal(){}hintHidden2PairVertical(){}hintHidden2PairBox(){}hintHidden3PairHorizontal(){}hintHidden3PairVertical(){}hintHidden3PairBox(){}hintPointingPair(){}hintXWing(){const t=[],o=Array.from({length:9},()=>[{candidate:1,indexList:[]},{candidate:2,indexList:[]},{candidate:3,indexList:[]},{candidate:4,indexList:[]},{candidate:5,indexList:[]},{candidate:6,indexList:[]},{candidate:7,indexList:[]},{candidate:8,indexList:[]},{candidate:9,indexList:[]}]);for(let e=0;e<9;e++){const n=M[e],l=o[e];e===0&&n.forEach((s,a)=>{this.board.cells[s].candidateList.forEach(h=>{l.find(g=>g.candidate===h).indexList.push(a)})}),console.log("sourceIndexListByDigit",e,l);for(let s=e+1;s<9;s++){const a=M[s],r=o[s];e===0&&a.forEach((x,g)=>{this.board.cells[x].candidateList.forEach(L=>{r.find(b=>b.candidate===L).indexList.push(g)})}),console.log("targetIndexListByDigit",e,s,r);const h=l.reduce((x,g,C)=>{if(g.indexList.length!=2)return x;const L=r[C];return d.isArraysEqual(g.indexList,L.indexList)&&x.push(g),x},[]);console.log("extractSameIndexList",h,h.length),h.length}}return t}hintSwordFish(){}hintJellyFish(){}hintXYWing(){const t=[];return this.board.cells.filter(o=>o.candidateList.length===2).forEach(o=>{console.log("loop twoCandidateCellList",o.candidateList);const e=this.getPincerCellList(o);if(e.length>0)return t.push(...e)}),t.length>0?t:null}hintXYZWing(){}}var d;(m=>{function t(a){return a.map(r=>r.digit)}m.extractCellDigit=t;function i(a,r,h){const x=[];for(let g=0;g<r;g++)x.push(a.slice(g*h,g*h+h));return x}m.numberArrayToMatrix=i;function o(a,r,h,x){const g=[];for(let C=0;C<h;C++){g.push([]);for(let L=0;L<x;L++){let _=0;for(let b=0;b<h;b++)_+=a[C][b]*r[b][L];g[C].push(_)}}return g}m.matrixMultiply=o;function e(a,r){return a.length===r.length&&a.every((h,x)=>h===r[x])}m.isArraysEqual=e;function n(a,r){return a.every(h=>r.includes(h))}m.isArraysInclude=n;function l(a,r){return a.filter(h=>r.includes(h))}m.intersectionArray=l;function s(a,r){return a.filter(h=>!r.includes(h))}m.excludeArray=s})(d||(d={}));const Z={class:"flex",style:{display:"flex"}},K={class:"sudoku-table"},Q=["onClick"],tt={key:0,class:"input-number"},it={key:1,class:"initial-number"},et={key:2,class:"candidate-list"},nt=u("hr",null,null,-1),lt=u("hr",null,null,-1),ot=u("hr",null,null,-1),at=["model-value"],st=u("hr",null,null,-1),rt=u("hr",null,null,-1),ct=u("hr",null,null,-1),dt=u("hr",null,null,-1),ut={class:"number-pad"},ht=["onClick"],ft=q({__name:"SudokuClass2",setup(m){const t=A(new J),i=A(null),o=U(()=>i.value!==null?t.value.board.cells[i.value].digit:null),e=A([]),n=A([]),l=A(""),s=A("");function a(c){i.value=c}function r(c){i.value&&t.value.setNumberIndex(i.value,c,!0)}A(0);function h(){t.value.removeDigitRandom(5)}function x(){t.value.generateOneRandomSafe(0)}function g(){s.value=t.value.extractToString()}function C(){const c=t.value.hintNakedSingleCandidate();c&&(e.value.push(c),t.value.setNumberIndex(c.index,c.digit,!0),i.value=c.index)}function L(){const c=t.value.hintSingleVerticalCandidate();c&&(e.value.push(c),t.value.setNumberIndex(c.index,c.digit,!0),i.value=c.index)}function _(){const c=t.value.hintSingleHorizontalCandidate();c&&(e.value.push(c),t.value.setNumberIndex(c.index,c.digit,!0),i.value=c.index)}function b(){const c=t.value.hintSingleBoxCandidate();c&&(e.value.push(c),t.value.setNumberIndex(c.index,c.digit,!0),i.value=c.index)}function H(){const c=t.value.hintLockEliminate2PairVertical();c&&e.value.push(c)}function S(){const c=t.value.hintLockEliminate2PairHorizontal();c&&e.value.push(c)}function y(){const c=t.value.hintLockEliminate2PairBox();c&&e.value.push(c)}function D(){const c=t.value.hintXYWing();c&&e.value.push(c)}function X(){const c=t.value.hintXWing();c&&e.value.push(c)}function V(){const c=[3,8,1,5,4,7,0,0,0,6,0,0,9,2,1,0,0,0,2,7,9,8,6,3,1,5,4,9,0,0,6,0,4,0,0,1,4,0,6,0,0,9,8,3,0,7,1,8,3,5,2,0,4,0,5,9,7,0,3,6,0,0,0,8,6,0,0,0,5,0,0,2,1,0,0,0,9,8,5,6,0];t.value.generate(c)}return G(()=>{x();for(let c=0;c<15;c++)h()}),$(()=>{}),(c,I)=>(v(),p(w,null,[u("div",Z,[u("div",K,[(v(!0),p(w,null,z(t.value.board.cells,(f,k)=>(v(),p("div",{key:k,class:W(["cell-frame",{selected:i.value===k,"same-number":o.value!=0&&o.value===f.digit,"left-border":k%3===0,"top-border":Math.floor(k/9)%3===0,"right-border":k%3===2,"bottom-border":Math.floor(k/9)%3===2}]),onClick:N=>a(k)},[f.input?(v(),p("span",tt,P(f.digit),1)):f.digit!==0?(v(),p("span",it,P(f.digit),1)):(v(),p("div",et,[(v(),p(w,null,z(9,N=>u("div",{class:W(["candidate",{"same-number":f.candidateList.indexOf(N)>=0&&N===(o.value??0)}]),key:N},P(f.candidateList.indexOf(N)>=0?N:""),3)),64))]))],10,Q))),128))]),u("div",null,[u("button",{onClick:C},"NakedSingle"),u("button",{onClick:L},"SingleVertical"),u("button",{onClick:_},"SingleHorizontal"),u("button",{onClick:b},"SingleBox"),nt,u("button",{onClick:H},"Lock 2Pair Vertical"),u("button",{onClick:S},"Lock 2Pair Horizontal"),u("button",{onClick:y},"Lock 2Pair Box"),lt,u("button",{onClick:D},"XYWing"),ot,u("button",{onClick:V},"generate"),u("button",{onClick:g},"Extract"),u("textarea",{"model-value":n.value.join(",")},null,8,at),u("button",{onClick:X},"XWing"),st,R(" input "),j(u("textarea",{style:{width:"100%",height:"120px"},"onUpdate:modelValue":I[0]||(I[0]=f=>l.value=f)},null,512),[[O,l.value]]),rt,R(" extract "),j(u("textarea",{style:{width:"100%",height:"120px"},"onUpdate:modelValue":I[1]||(I[1]=f=>s.value=f)},null,512),[[O,s.value]]),ct,u("button",{onClick:V},"Generate"),u("button",{onClick:g},"Extract"),dt,u("div",ut,[(v(),p(w,null,z(9,f=>u("div",{class:"num",key:f,onClick:k=>r(f)},P(f),9,ht)),64))])])]),u("div",null,[(v(!0),p(w,null,z(e.value,f=>(v(),p("div",null,P(f),1))),256))])],64))}});export{ft as default};
